// 给定一个非负整数数组，你最初位于数组的第一个位置。

// 数组中的每个元素代表你在该位置可以跳跃的最大长度。

// 你的目标是使用最少的跳跃次数到达数组的最后一个位置。

// 示例:

// 输入: [2,3,1,1,4]
// 输出: 2
// 解释: 跳到最后一个位置的最小跳跃数是 2。
//      从下标为 0 跳到下标为 1 的位置，跳 1 步，
// 然后跳 3 步到达数组的最后一个位置。

var jump = function(arr){
    var num = 0;
    var end = 0;
    var pos = 0;
    for(let i =0;i<arr.length-1;i++){
        //每次循环更新跳到的最大位置
       pos = Math.max(pos,arr[i] + i);
       if(i == end){      //当跳到上一次计算出的最大位置时
           end = pos;    //更新最大位置
           num++;        //步数加一
       }
    }
    return num;
}
console.log(jump([2,3,1,1,4]))